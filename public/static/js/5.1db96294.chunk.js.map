{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","i","length","source","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","e","_e","f","TypeError","it","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","title","description","inputHandler","setFormData","process","place","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Authorization","token","userId","disabled"],"mappings":"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","file":"static/js/5.1db96294.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n    const [ isLoading, setIsLoading ] = useState( false );\n    const [ error, setError ] = useState();\n\n    const activeHttpRequests = useRef( [] );\n\n    const sendRequest = useCallback(\n        async ( url, method = 'GET', body = null, headers = {} ) => {\n            setIsLoading( true );\n            const httpAbortCtrl = new AbortController();\n            activeHttpRequests.current.push( httpAbortCtrl );\n\n            try {\n                const response = await fetch( url, {\n                    method,\n                    body,\n                    headers,\n                    signal: httpAbortCtrl.signal\n                } );\n\n                const responseData = await response.json();\n\n                activeHttpRequests.current = activeHttpRequests.current.filter(\n                    reqCtrl => reqCtrl !== httpAbortCtrl\n                );\n\n                if ( !response.ok ) {\n                    throw new Error( responseData.message );\n                }\n\n                setIsLoading( false );\n                return responseData;\n            } catch ( err ) {\n                setError( err.message );\n                setIsLoading( false );\n                throw err;\n            }\n        },\n        []\n    );\n\n    const clearError = () => {\n        setError( null );\n    };\n\n    useEffect( () => {\n        return () => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            activeHttpRequests.current.forEach( abortCtrl => abortCtrl.abort() );\n        };\n    }, [] );\n\n    return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n    type: VALIDATOR_TYPE_MINLENGTH,\n    val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n    type: VALIDATOR_TYPE_MAXLENGTH,\n    val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n    let isValid = true;\n    for (const validator of validators) {\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n            isValid = isValid && value.trim().length > 0;\n        }\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n            isValid = isValid && value.trim().length >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n            isValid = isValid && value.trim().length <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MIN) {\n            isValid = isValid && +value >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAX) {\n            isValid = isValid && +value <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n        }\n    }\n    return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from \"react\";\nimport { validate } from '../../util/validators';\n\nimport './Input.css'\n\nconst inputReducer = ( state, action ) => {\n    switch ( action.type ) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate( action.val, action.validators )\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            }\n        default:\n            return state;\n    }\n}\n\nconst Input = props => {\n    const [ inputState, dispatch ] = useReducer( inputReducer, {\n        value: props.initialValue || \"\",\n        isTouched: false,\n        isValid: props.initialValid || false\n    } )\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect( () => {\n        props.onInput( id, value, isValid )\n    }, [ id, value, isValid, onInput ] )\n\n    const changeHandler = event => {\n        dispatch( {\n            type: 'CHANGE',\n            val: event.target.value,\n            validators: props.validators\n        } );\n    };\n\n    const touchHandler = () => {\n        dispatch( {\n            type: \"TOUCH\"\n        } )\n    }\n\n    const element = props.element === 'input' ?\n        ( <input\n            id={ props.id }\n            type={ props.type }\n            placeholder={ props.placeholder }\n            onChange={ changeHandler }\n            onBlur={ touchHandler }\n            value={ inputState.value } /> ) :\n        ( <textarea\n            id={ props.id }\n            rows={ props.rows || 3 }\n            onChange={ changeHandler }\n            onBlur={ touchHandler }\n            value={ inputState.value } /> );\n\n\n    return ( <div className={ `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}` }>\n        <label htmlFor={ props.id }>\n            { props.label }</label>\n        { element }\n        { !inputState.isValid && !inputState.isTouched && <p>{ props.errorText }</p> }\n    </div> )\n}\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = ( state, action ) => {\n    switch ( action.type ) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for ( const inputId in state.inputs ) {\n                if ( !state.inputs[ inputId ] ) {\n                    continue;\n                }\n                if ( inputId === action.inputId ) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[ inputId ].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [ action.inputId ]: { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = ( initialInputs, initialFormValidity ) => {\n    const [ formState, dispatch ] = useReducer( formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    } );\n\n    const inputHandler = useCallback( ( id, value, isValid ) => {\n        dispatch( {\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        } );\n    }, [] );\n\n    const setFormData = useCallback( ( inputData, formValidity ) => {\n        dispatch( {\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        } );\n    }, [] );\n\n    return [ formState, inputHandler, setFormData ];\n};","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport {\n    VALIDATOR_REQUIRE,\n    VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n    const auth = useContext( AuthContext )\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\n    const [ loadedPlace, setLoadedPlace ] = useState();\n    const placeId = useParams().placeId;\n    const history = useHistory()\n\n    const [ formState, inputHandler, setFormData ] = useForm(\n        {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    useEffect( () => {\n        try {\n            const fetchPlace = async () => {\n                const responseData = await sendRequest( `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}` )\n\n                setLoadedPlace( responseData.place );\n                setFormData( {\n                    title: {\n                        value: responseData.place.title,\n                        isValid: true\n                    },\n                    description: {\n                        value: responseData.place.description,\n                        isValid: true\n                    }\n                }, true )\n            }\n            fetchPlace()\n        } catch ( err ) { }\n    }, [ sendRequest, placeId, setFormData ] )\n\n    const placeUpdateSubmitHandler = async event => {\n        event.preventDefault();\n\n        try {\n            await sendRequest( `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`, \"PATCH\", JSON.stringify( {\n                title: formState.inputs.title.value,\n                description: formState.inputs.description.value\n            } ), {\n                'Content-Type': 'application/json',\n                Authorization: \"Bearer \" + auth.token\n\n            } )\n            history.push( '/' + auth.userId + '/places' )\n        } catch ( err ) {\n        }\n    };\n\n    if ( isLoading ) {\n        return (\n            <div className=\"center\">\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if ( !loadedPlace && !error ) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>Could not find place!</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={ error } onClear={ clearError } />\n            { !isLoading && loadedPlace && <form className=\"place-form\" onSubmit={ placeUpdateSubmitHandler }>\n                <Input\n                    id=\"title\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Title\"\n                    validators={ [ VALIDATOR_REQUIRE() ] }\n                    errorText=\"Please enter a valid title.\"\n                    onInput={ inputHandler }\n                    initialValue={ loadedPlace.title }\n                    initialValid={ true }\n                />\n                <Input\n                    id=\"description\"\n                    element=\"textarea\"\n                    label=\"Description\"\n                    validators={ [ VALIDATOR_MINLENGTH( 5 ) ] }\n                    errorText=\"Please enter a valid description (min. 5 characters).\"\n                    onInput={ inputHandler }\n                    initialValue={ loadedPlace.description }\n                    initialValid={ true }\n                />\n                <Button type=\"submit\" disabled={ !formState.isValid }>\n                    UPDATE PLACE\n                </Button>\n            </form> }\n        </React.Fragment>\n    );\n};\n\nexport default UpdatePlace;\n"],"sourceRoot":""}