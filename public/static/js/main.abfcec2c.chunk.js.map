{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Button.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","children","to","exact","type","disabled","logoutTimer","MainHeader","NavLinks","auth","useContext","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.abfcec2c.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext( {\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    login: () => { },\n    logout: () => { }\n} );\n\n\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { createPortal } from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n    const [ token, setToken ] = useState( false );\n    const [ tokenExpirationDate, setTokenExpirationDate ] = useState();\n    const [ userId, setUserId ] = useState( false );\n\n    const login = useCallback( ( uid, token, expirationDate ) => {\n        setToken( token );\n        setUserId( uid );\n        const tokenExpirationDate =\n            expirationDate || new Date( new Date().getTime() + 1000 * 60 * 60 );\n        setTokenExpirationDate( tokenExpirationDate );\n        localStorage.setItem(\n            'userData',\n            JSON.stringify( {\n                userId: uid,\n                token: token,\n                expiration: tokenExpirationDate.toISOString()\n            } )\n        );\n    }, [] );\n\n    const logout = useCallback( () => {\n        setToken( null );\n        setTokenExpirationDate( null );\n        setUserId( null );\n        localStorage.removeItem( 'userData' );\n    }, [] );\n\n    useEffect( () => {\n        if ( token && tokenExpirationDate ) {\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n            logoutTimer = setTimeout( logout, remainingTime );\n        } else {\n            clearTimeout( logoutTimer );\n        }\n    }, [ token, logout, tokenExpirationDate ] );\n\n    useEffect( () => {\n        const storedData = JSON.parse( localStorage.getItem( 'userData' ) );\n        if (\n            storedData &&\n            storedData.token &&\n            new Date( storedData.expiration ) > new Date()\n        ) {\n            login( storedData.userId, storedData.token, new Date( storedData.expiration ) );\n        }\n    }, [ login ] );\n\n    return { token, login, logout, userId };\n};","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = (props) => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport Button from \"../FormElements/Button\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = ( props ) => {\n\n  const auth = useContext( AuthContext );\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          All Users\n        </NavLink>\n      </li>\n      {\n\n        auth.isLoggedIn && <li>\n          <NavLink to={ `/${auth.userId}/places` }>My Places</NavLink>\n        </li > }\n      {\n        auth.isLoggedIn && <li>\n          <NavLink to=\"/places/new\">Add Place</NavLink>\n        </li>\n      }\n      {\n        !auth.isLoggedIn && <li>\n          <NavLink to=\"/auth\">Authenticate</NavLink>\n        </li>\n      }\n      {\n        auth.isLoggedIn && <li>\n          <button onClick={ auth.logout }>\n            LOGOUT</button></li>\n      }\n    </ul >\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { createPortal } from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy( () => import( './user/pages/Users' ) )\nconst NewPlace = React.lazy( () => import( './places/pages/NewPlace' ) )\nconst UserPlaces = React.lazy( () => import( './places/pages/UserPlaces' ) )\nconst UpdatePlace = React.lazy( () => import( './places/pages/UpdatePlace' ) )\nconst Auth = React.lazy( () => import( './user/pages/Auth' ) )\n\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if ( token ) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={ {\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      } }\n    >\n      <Router>\n        <MainNavigation />\n        <main><Suspense fallback={ <div className=\"center\"><LoadingSpinner /></div> }>{ routes }</Suspense></main>\n      </Router>\n    </AuthContext.Provider >\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}